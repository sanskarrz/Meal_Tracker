{"dependencies":[{"name":"react-native-web/dist/exports/BackHandler","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"JJ8ZeP6TwsodxtZCeal/l/p3LP0=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"isSearchBarAvailableForCurrentPlatform\", {\n    enumerable: true,\n    get: function () {\n      return isSearchBarAvailableForCurrentPlatform;\n    }\n  });\n  Object.defineProperty(exports, \"isHeaderBarButtonsAvailableForCurrentPlatform\", {\n    enumerable: true,\n    get: function () {\n      return isHeaderBarButtonsAvailableForCurrentPlatform;\n    }\n  });\n  exports.executeNativeBackPress = executeNativeBackPress;\n  exports.parseBooleanToOptionalBooleanNativeProp = parseBooleanToOptionalBooleanNativeProp;\n  var _reactNativeWebDistExportsBackHandler = require(_dependencyMap[0], \"react-native-web/dist/exports/BackHandler\");\n  var BackHandler = _interopDefault(_reactNativeWebDistExportsBackHandler);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  const isSearchBarAvailableForCurrentPlatform = ['ios', 'android'].includes(Platform.default.OS);\n  const isHeaderBarButtonsAvailableForCurrentPlatform = Platform.default.OS === 'ios';\n  function executeNativeBackPress() {\n    // This function invokes the native back press event\n    BackHandler.default.exitApp();\n    return true;\n  }\n  function parseBooleanToOptionalBooleanNativeProp(prop) {\n    switch (prop) {\n      case undefined:\n        return 'undefined';\n      case true:\n        return 'true';\n      case false:\n        return 'false';\n    }\n  }\n});","lineCount":47,"map":[[12,2,2,0,"Object"],[12,8,2,0],[12,9,2,0,"defineProperty"],[12,23,2,0],[12,24,2,0,"exports"],[12,31,2,0],[13,4,2,0,"enumerable"],[13,14,2,0],[14,4,2,0,"get"],[14,7,2,0],[14,18,2,0,"get"],[14,19,2,0],[15,6,2,0],[15,13,2,0,"isSearchBarAvailableForCurrentPlatform"],[15,51,2,0],[16,4,2,0],[17,2,2,0],[18,2,3,0,"Object"],[18,8,3,0],[18,9,3,0,"defineProperty"],[18,23,3,0],[18,24,3,0,"exports"],[18,31,3,0],[19,4,3,0,"enumerable"],[19,14,3,0],[20,4,3,0,"get"],[20,7,3,0],[20,18,3,0,"get"],[20,19,3,0],[21,6,3,0],[21,13,3,0,"isHeaderBarButtonsAvailableForCurrentPlatform"],[21,58,3,0],[22,4,3,0],[23,2,3,0],[24,2,4,0,"exports"],[24,9,4,0],[24,10,4,0,"executeNativeBackPress"],[24,32,4,0],[24,35,4,0,"executeNativeBackPress"],[24,57,4,0],[25,2,9,0,"exports"],[25,9,9,0],[25,10,9,0,"parseBooleanToOptionalBooleanNativeProp"],[25,49,9,0],[25,52,9,0,"parseBooleanToOptionalBooleanNativeProp"],[25,91,9,0],[26,2,18,1],[26,6,18,1,"_reactNativeWebDistExportsBackHandler"],[26,43,18,1],[26,46,18,1,"require"],[26,53,18,1],[26,54,18,1,"_dependencyMap"],[26,68,18,1],[27,2,18,1],[27,6,18,1,"BackHandler"],[27,17,18,1],[27,20,18,1,"_interopDefault"],[27,35,18,1],[27,36,18,1,"_reactNativeWebDistExportsBackHandler"],[27,73,18,1],[28,2,18,1],[28,6,18,1,"_reactNativeWebDistExportsPlatform"],[28,40,18,1],[28,43,18,1,"require"],[28,50,18,1],[28,51,18,1,"_dependencyMap"],[28,65,18,1],[29,2,18,1],[29,6,18,1,"Platform"],[29,14,18,1],[29,17,18,1,"_interopDefault"],[29,32,18,1],[29,33,18,1,"_reactNativeWebDistExportsPlatform"],[29,67,18,1],[30,2,2,7],[30,8,2,13,"isSearchBarAvailableForCurrentPlatform"],[30,46,2,51],[30,49,2,54],[30,50,2,55],[30,55,2,60],[30,57,2,62],[30,66,2,71],[30,67,2,72],[30,68,2,73,"includes"],[30,76,2,81],[30,77,2,82,"Platform"],[30,85,2,90],[30,86,2,90,"default"],[30,93,2,90],[30,94,2,91,"OS"],[30,96,2,93],[30,97,2,94],[31,2,3,7],[31,8,3,13,"isHeaderBarButtonsAvailableForCurrentPlatform"],[31,53,3,58],[31,56,3,61,"Platform"],[31,64,3,69],[31,65,3,69,"default"],[31,72,3,69],[31,73,3,70,"OS"],[31,75,3,72],[31,80,3,77],[31,85,3,82],[32,2,4,7],[32,11,4,16,"executeNativeBackPress"],[32,33,4,38,"executeNativeBackPress"],[32,34,4,38],[32,36,4,41],[33,4,5,2],[34,4,6,2,"BackHandler"],[34,15,6,13],[34,16,6,13,"default"],[34,23,6,13],[34,24,6,14,"exitApp"],[34,31,6,21],[34,32,6,22],[34,33,6,23],[35,4,7,2],[35,11,7,9],[35,15,7,13],[36,2,8,0],[37,2,9,7],[37,11,9,16,"parseBooleanToOptionalBooleanNativeProp"],[37,50,9,55,"parseBooleanToOptionalBooleanNativeProp"],[37,51,9,56,"prop"],[37,55,9,60],[37,57,9,62],[38,4,10,2],[38,12,10,10,"prop"],[38,16,10,14],[39,6,11,4],[39,11,11,9,"undefined"],[39,20,11,18],[40,8,12,6],[40,15,12,13],[40,26,12,24],[41,6,13,4],[41,11,13,9],[41,15,13,13],[42,8,14,6],[42,15,14,13],[42,21,14,19],[43,6,15,4],[43,11,15,9],[43,16,15,14],[44,8,16,6],[44,15,16,13],[44,22,16,20],[45,4,17,2],[46,2,18,0],[47,0,18,1],[47,3]],"functionMap":{"names":["<global>","executeNativeBackPress","parseBooleanToOptionalBooleanNativeProp"],"mappings":"AAA;OCG;CDI;OEC;CFS"},"hasCjsExports":false},"type":"js/module"}]}